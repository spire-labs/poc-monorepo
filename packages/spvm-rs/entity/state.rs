//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "state")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false, column_type = "Text")]
    pub ticker: String,
    #[sea_orm(primary_key, auto_increment = false, column_type = "Text")]
    pub owner_address: String,
    pub amount: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::initialized_tickers::Entity",
        from = "Column::Ticker",
        to = "super::initialized_tickers::Column::Ticker",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    InitializedTickers,
}

impl Related<super::initialized_tickers::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::InitializedTickers.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
